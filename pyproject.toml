[tool.poetry]
name = "p4a-portal"
version = "0.1.0"
description = ""
authors = ["Mikuláš Poul <mikulaspoul@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "<2"
ujson = "^5.7.0"
requests = "^2.28.1"
django = "<4.2"
psycopg2-binary = "^2.9.5"
pandas = "<2"
numpy = "<2"
gitpython = "^3.1.30"
gunicorn = "^23.0.0"
sentry-sdk = "^2.8.0"
ipython = "^8.10.0"
django-extensions = "^3.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "F",
    # https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "E",
    "W",
    # https://docs.astral.sh/ruff/rules/#isort-i
    "I",
    # https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "N",
    # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "UP",
    # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "B",
    # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "C4",
    # https://docs.astral.sh/ruff/rules/#flake8-debugger-t10
    "T10",
    # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
    "PIE",
    # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
    "PT",
    # https://docs.astral.sh/ruff/rules/#flake8-return-ret
    "RET",
    # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "SIM",
    # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "D201", "D202", "D204", "D206", "D207", "D208", "D209", "D211", "D213", "D300", "D403",
    # https://docs.astral.sh/ruff/rules/#flake8-implicit-str-concat-isc
    "ISC",
    # https://docs.astral.sh/ruff/rules/#flake8-import-conventions-icn
    "ICN",
    # https://docs.astral.sh/ruff/rules/#flake8-tidy-imports-tid
    "TID252",
    # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "RUF010", "RUF200",
]

# Never enforce...
ignore = [
    "N999",   # Invalid module name
    "E501",   # line length violations
    "SIM108", # use-ternary-operator
    "E501",   # line length violations
    "SIM108", # use-ternary-operator
    "RET505", # superfluous-else-return
    "RET506", # superfluous-else-raise
    "RET507", # superfluous-else-continue
    "RET508", # superfluous-else-break
    "B027",   # empty-method-without-abstract-decorator
    "ISC001", # The following rules may cause conflicts when used with the formatter
]


[tool.ruff.lint.per-file-ignores]
# Never inforce F401 (unused-import) in __init__ files
"__init__.py" = ["F401", "F403", "F405"]
# Never inforce N806 (non-lowercase-variable-in-function) in migrations
"**/migrations/**" = ["N806"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "list"
